# kubectl delete -A ValidatingWebhookConfiguration ingress-ingress-nginx-admission
networking:
  sftp_port: 22
metallb:
  enabled: false

# Ingress Controller Configuration
ingress-controller:
  # Type of ingress controller to use
  type: nginx
  # Class name for the ingress controller
  class: nginx-{{ .Release.Namespace }}
  # Controller value for the ingress class
  controllerValue: "k8s.io/ingress-{{ .Release.Namespace }}"
  # Selector labels for the ingress controller
  selector:
    component: controller
    instance: "{{ .Release.Name }}"
    name: ingress-controller
  controller:
    replicaCount: 1
    service:
      enabled: false
      create: false
    # Pod labels and selectors - used by load balancers
    podLabels:
      app: nginx-ingress-controller
    labels:
      app: nginx-ingress-controller
    # Service account configuration
    serviceAccount:
      create: true
      # The name will automatically include the namespace
      name: nginx-ingress-serviceaccount
    # RBAC configuration
    rbac:
      create: true
      scope: namespaced
    # ClusterRole configuration - make it unique per environment
    clusterRole:
      # Always create a ClusterRole - it will be unique per environment
      create: true
      # Use a unique name that includes the namespace to avoid conflicts
      name: "ingress-nginx-{{ .Release.Namespace }}"
    # IngressClass configuration
    ingressClassResource:
      name: nginx-{{ .Release.Namespace }}
      enabled: true
      default: false
      controllerValue: "k8s.io/ingress-nginx-{{ .Release.Namespace }}"

# Load Balancer Common Configuration
loadBalancer:
  # Ingress class annotation - used by all load balancers
  ingressClass: "{{ index .Values \"ingress-controller\" \"class\" }}"
  # Common annotations for all load balancers
  annotations:
    # The selector is specified as annotations for more flexibility
    kubernetes.io/ingress.class: "{{ index .Values \"ingress-controller\" \"class\" }}"
    # Selector for the ingress controller pods - these can be customized based on your ingress controller
    ingress.kubernetes.io/selector-component: "{{ index .Values \"ingress-controller\" \"selector\" \"component\" }}"
    ingress.kubernetes.io/selector-instance: "{{ .Release.Name }}"
    # This can be customized based on your ingress controller
    ingress.kubernetes.io/selector-name: "{{ index .Values \"ingress-controller\" \"selector\" \"name\" }}"

# Primary API Load Balancer
primary_api:
  createLoadBalancer: false
  advertiseL2MetalLb: false
  ip: "192.168.123.205"
  port: 80
  https_port: 443
  addressPool: "primary-api-ip"
  # Custom annotations for this load balancer (will be merged with loadBalancer.annotations)
  annotations: {}
  # Example of overriding annotations:
  # annotations:
  #   custom.annotation/key: value
  #   ingress.kubernetes.io/selector-component: custom-controller
  # Override common load balancer settings if needed
  # ingressClass: custom-ingress-class
  # selector:
  #   custom: selector

# Secondary API Load Balancer
secondary_api:
  createLoadBalancer: false
  advertiseL2MetalLb: false
  ip: "192.168.123.206"
  port: 80
  https_port: 443
  addressPool: "secondary-api-ip"
  # Custom annotations for this load balancer (will be merged with loadBalancer.annotations)
  annotations: {}
  # Example of overriding annotations:
  # annotations:
  #   custom.annotation/key: value
  #   ingress.kubernetes.io/selector-component: custom-controller

# Admin API Load Balancer
admin_api:
  createLoadBalancer: true
  advertiseL2MetalLb: false
  ip: "192.168.123.207"
  port: 80
  https_port: 443
  addressPool: "admin-ip"
  # Custom annotations for this load balancer (will be merged with loadBalancer.annotations)
  annotations: {}
  # Example of overriding annotations:
  # annotations:
  #   custom.annotation/key: value
  #   ingress.kubernetes.io/selector-component: custom-controller
  # selector:
  #   custom: selector

