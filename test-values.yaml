# Test values for ingress chart
metallb:
  enabled: true

# Load Balancer Common Configuration
loadBalancer:
  # Ingress class annotation - used by all load balancers
  ingressClass: nginx-test
  # Common annotations for all load balancers
  annotations:
    # The selector is specified as annotations for more flexibility
    kubernetes.io/ingress.class: nginx-test
    # Selector for the ingress controller pods
    ingress.kubernetes.io/selector-component: controller
    ingress.kubernetes.io/selector-instance: test-release
    ingress.kubernetes.io/selector-name: ingress-nginx
    # Custom annotations
    custom.annotation/example: "true"

# Primary API Load Balancer
primary_api:
  createLoadBalancer: true
  advertiseL2MetalLb: true
  ip: "192.168.123.205"
  port: 80
  https_port: 443
  addressPool: "primary-api-ip-test"
  # Custom annotations for this load balancer (will be merged with loadBalancer.annotations)
  annotations:
    primary.annotation/example: "true"

# Secondary API Load Balancer
secondary_api:
  createLoadBalancer: true
  advertiseL2MetalLb: true
  ip: "192.168.123.206"
  port: 80
  https_port: 443
  addressPool: "secondary-api-ip-test"
  # Custom annotations for this load balancer
  annotations:
    secondary.annotation/example: "true"

# Admin API Load Balancer
admin_api:
  createLoadBalancer: true
  advertiseL2MetalLb: true
  ip: "192.168.123.207"
  port: 80
  https_port: 443
  addressPool: "admin-ip-test"
  # Custom annotations for this load balancer
  annotations:
    admin.annotation/example: "true"

# SFTP Configuration
sftp:
  enabled: false
  port: 22
  targetPort: 22

# Syslog Configuration
syslog:
  enabled: false
  tcp_port: 514
  udp_port: 514
  targetPort: 514

# Ingress Controller Configuration
ingress-controller:
  # Type of ingress controller to use
  type: nginx
  # Class name for the ingress controller
  class: nginx-test
  # Controller value for the ingress class
  controllerValue: "k8s.io/ingress-nginx-test"
  # Selector labels for the ingress controller
  selector:
    component: controller
    instance: "test-release"
    name: ingress-nginx
  controller:
    # Create a test-specific ClusterRole with a unique name
    clusterRole:
      create: true
      name: "ingress-nginx-test"
    # Use a unique IngressClass name for testing
    ingressClassResource:
      name: nginx-test
      enabled: true
      default: false
      controllerValue: "k8s.io/ingress-nginx-test"
    # Set a unique name for other cluster-wide resources
    electionID: ingress-controller-leader-test
    # Add environment label
    podLabels:
      environment: test
